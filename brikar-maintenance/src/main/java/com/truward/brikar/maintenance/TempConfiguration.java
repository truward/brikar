package com.truward.brikar.maintenance;

import com.truward.brikar.server.launcher.StandardLauncher;

import javax.annotation.ParametersAreNonnullByDefault;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

/**
 * @author Alexander Shabanov
 */
@ParametersAreNonnullByDefault
public final class TempConfiguration {
  private final Map<String, String> properties;

  public TempConfiguration(Map<String, String> config) {
    properties = new HashMap<>(config);
  }

  public TempConfiguration() {
    this(Collections.<String, String>emptyMap());
  }

  public TempConfiguration setPort(int port) {
    return setProperty(StandardLauncher.CONFIG_KEY_PORT, Integer.toString(port));
  }

  public TempConfiguration setShutdownDelay(long delayMillis) {
    return setProperty(StandardLauncher.CONFIG_KEY_SHUTDOWN_DELAY, Long.toString(delayMillis));
  }

  public TempConfiguration setProperty(String name, String value) {
    properties.put(name, value);
    return this;
  }

  /**
   * Writes properties to the temporary file that will be deleted on process exit and returns file URL as a result.
   *
   * @return File URL
   * @throws IOException On I/O error
   */
  public URL writeToTempFile() throws IOException {
    final File tempConfigFile = File.createTempFile("brikar-tempconfig-", ".properties");
    tempConfigFile.deleteOnExit();

    // store properties
    final Properties props = new Properties();
    props.putAll(properties);
    try (final FileOutputStream fileOutputStream = new FileOutputStream(tempConfigFile)) {
      props.store(fileOutputStream, "[brikar-maintenance] TempConfiguration - Autogenerated properties");
    }

    return tempConfigFile.toURI().toURL();
  }
}
